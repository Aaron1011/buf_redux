var searchIndex = {};
searchIndex['buf_redux'] = {"items":[[3,"BufReader","buf_redux","",null,null],[3,"Unbuffer","","A `Read` adapter for a consumed `BufReader` which will empty bytes from the buffer before reading from\n`inner` directly. Frees the buffer when it has been emptied. ",null,null],[11,"new","","",0,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"self"}}],[11,"with_capacity","","",0,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"self"}}],[11,"make_room","","Move data to the start of the buffer, making room at the end for more\nreading.",0,{"inputs":[{"name":"bufreader"}],"output":null}],[11,"grow","","Grow the internal buffer by *at least* `additional` bytes. May not be\nquite exact due to implementation details of the buffer's allocator.",0,{"inputs":[{"name":"bufreader"},{"name":"usize"}],"output":null}],[11,"get_buf","","Get the section of the buffer containing valid data; may be empty.",0,null],[11,"available","","Get the current number of bytes available in the buffer.",0,{"inputs":[{"name":"bufreader"}],"output":{"name":"usize"}}],[11,"capacity","","Get the total buffer capacity.",0,{"inputs":[{"name":"bufreader"}],"output":{"name":"usize"}}],[11,"get_ref","","Get an immutable reference to the underlying reader.",0,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Get a mutable reference to the underlying reader.",0,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes `self` and returns the inner reader only.",0,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner_with_buf","","Consumes `self` and returns both the underlying reader and the buffer,\nwith the data moved to the beginning and the length truncated to contain\nonly valid data.",0,null],[11,"unbuffer","","Consumes `self` and returns an adapter which implements `Read` and will\nempty the buffer before reading directly from the underlying reader.",0,{"inputs":[{"name":"bufreader"}],"output":{"name":"unbuffer"}}],[11,"read_into_buf","","Unconditionally perform a read into the buffer, moving data to make room\nif necessary.",0,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"read","","",0,null],[11,"fill_buf","","",0,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",0,{"inputs":[{"name":"bufreader"},{"name":"usize"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",0,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"is_buf_empty","","Returns `true` if the buffer still has some bytes left, `false` otherwise.",1,{"inputs":[{"name":"unbuffer"}],"output":{"name":"bool"}}],[11,"buf_len","","Returns the number of bytes remaining in the buffer.",1,{"inputs":[{"name":"unbuffer"}],"output":{"name":"usize"}}],[11,"into_inner","","Return the underlying reader, finally letting the buffer die in peace and join its family\nin allocation-heaven.",1,{"inputs":[{"name":"unbuffer"}],"output":{"name":"r"}}],[11,"read","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"unbuffer"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"BufReader"],[3,"Unbuffer"]]};
initSearch(searchIndex);
